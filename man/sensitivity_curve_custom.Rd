% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediation.R
\name{sensitivity_curve_custom}
\alias{sensitivity_curve_custom}
\title{Estimate mediated effects for a variety of embedding dimensions using custom embedding}
\usage{
sensitivity_curve_custom(graph, formula, X_max)
}
\arguments{
\item{graph}{A \code{\link[tidygraph:tbl_graph]{tidygraph::tbl_graph()}} object.}

\item{formula}{Details about the nodal design matrix. Of the form
outcome ~ nodal_formula. For now, no interactiosn or fancy stuff
are allowed in the formula.}

\item{X_max}{TODO}
}
\value{
A \code{rank_sensitivity_curve} object, which is a subclass of a
\code{\link[tibble:tibble]{tibble::tibble()}}.
}
\description{
Estimate mediated effects for a variety of embedding dimensions using custom embedding
}
\examples{

library(tidygraph)
library(invertiforms)

# suppose you want to use the degree-normalized Laplacian embedding
# instead of the adjacency spectral embedding. you can do that as
# follows

data(smoking)

smoking2 <- smoking |>
  mutate(
    smokes_int = as.integer(smokes) - 1
  )

A <- igraph::as_adj(smoking2)

# here we construct our "custom" embeddings

iform <- NormalizedLaplacian(A)
L <- transform(iform, A)

s_max <- RSpectra::svds(L, 10, 10)
X_max <- s_max$u \%*\% diag(sqrt(s_max$d))

# and now we plug them into the product-of-coefs estimator

curve_custom <- sensitivity_curve_custom(smoking2, smokes_int ~ sex, X_max)
curve_custom

plot(curve_custom)

}
