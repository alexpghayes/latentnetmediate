% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediation.R
\name{sensitivity_curve_long}
\alias{sensitivity_curve_long}
\title{Estimate mediated effects for a variety of embedding dimensions}
\usage{
sensitivity_curve_long(
  graph,
  formula,
  max_rank,
  ...,
  ranks_to_consider = 10,
  coembedding = c("U", "V"),
  node_data = NULL
)
}
\arguments{
\item{graph}{A \code{\link[tidygraph:tbl_graph]{tidygraph::tbl_graph()}} object.}

\item{formula}{Details about the nodal design matrix. Of the form
outcome ~ nodal_formula. For now, no interactions or fancy stuff
are allowed in the formula.}

\item{max_rank}{Maximum rank to consider (integer).}

\item{ranks_to_consider}{How many distinct ranks to consider (integer).
Optional, defaults to 10.}
}
\value{
A \code{rank_sensitivity_curve} object, which is a subclass of a
\code{\link[tibble:tibble]{tibble::tibble()}}.
}
\description{
Estimate mediated effects for a variety of embedding dimensions
}
\examples{

library(tidygraph)
library(dplyr)

data(smoking, package = "latentnetmediate")

# example with fully observed node data

rank_curve <- smoking |>
  mutate(
    smokes_int = as.integer(smokes) - 1
  ) |>
 sensitivity_curve(
   smokes_int ~ sex,
   max_rank = 25,
   ranks_to_consider = 24,
   se_type = "stata"
 )

rank_curve
plot(rank_curve)

# example with some missing node data. in this case, all edges are
# used to estimate embeddings, but once the embeddings are in hand,
# the regression only considers complete cases

data(glasgow, package = "latentnetmediate")

glasgow1 <- glasgow[[1]] |>
  activate(nodes) |>
  filter(selection129) |>
  mutate(
    smokes_dimaria = as.numeric(tobacco_int > 1)
  ) |>
  activate(edges) |>
  filter(friendship != "Structurally missing") |>
  activate(nodes)

# verify that there is some missing data, in this case treatment indicators
glasgow1 |>
  as_tibble() |>
  count(is.na(money))

glasgow1 |>
  sensitivity_curve(smokes_dimaria ~ money, max_rank = 15, coembedding = "V") |>
  plot()

}
