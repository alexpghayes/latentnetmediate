[{"path":"https://alexpghayes.github.io/latentnetmediate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 latentnetmediate authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Hayes. Author, maintainer, copyright holder.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hayes (2024). latentnetmediate: Estimate Latent Network Mediation Effects via Spectral Embeddings. R package version 0.0.0.9006,  https://alexpghayes.github.io/latentnetmediate/, https://github.com/alexpghayes/latentnetmediate.","code":"@Manual{,   title = {latentnetmediate: Estimate Latent Network Mediation Effects via Spectral Embeddings},   author = {Alex Hayes},   year = {2024},   note = {R package version 0.0.0.9006,  https://alexpghayes.github.io/latentnetmediate/},   url = {https://github.com/alexpghayes/latentnetmediate}, }"},{"path":"https://alexpghayes.github.io/latentnetmediate/index.html","id":"netmediate","dir":"","previous_headings":"","what":"Estimate Latent Network Mediation Effects via Spectral Embeddings","title":"Estimate Latent Network Mediation Effects via Spectral Embeddings","text":"goal latentnetmediate …","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Latent Network Mediation Effects via Spectral Embeddings","text":"can install development version latentnetmediate GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"alexpghayes/latentnetmediate\")"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ASE.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — ASE","title":"Title — ASE","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ASE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — ASE","text":"","code":"ASE(ufm)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ASE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — ASE","text":"ufm model","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ASE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — ASE","text":"ASE","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/addhealth.html","id":null,"dir":"Reference","previous_headings":"","what":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","title":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","text":"ADD HEALTH data constructed -school questionnaire; 90,118 students representing 84 communities took survey 1994-95.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/addhealth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","text":"","code":"addhealth"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/addhealth.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","text":"list tidygraph::tbl_graph() graph objects, corresponding one original 84 communities. community graph directed graph node table: sex (factor): Sex student, coded male female. Possibly missing. race (factor): Race student, code white, black, hispanic, asian, mixed/. Possibly missing. grade (integer): Grade student, 6 12. Possibly missing. school (factor): communities sister schools, first school coded factor second B. edge table: (int): Id student declaring friend (int): Id student declared friend weight (int): number 1 6. See details explanation.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/addhealth.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","text":"Originally http://moreno.ss.uci.edu/data.html, ultimately accessed via https://web.archive.org/web/20210115130726/http://moreno.ss.uci.edu/data.html","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/addhealth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","text":"communities one school; others two. two schools community students one school allowed name friends , \"sister school.\" student given paper--pencil questionnaire copy roster listing every student school , community two schools, student s provided roster \"sister\" school. name generator asked five male five female friends separately. question , \"List closest (male/female) friends. List best (male/female) friend first, next best friend, . (girls/boys) may include (boys/girls) friends (boy/girl) friends.\" friend named, student asked check whether /participated five activities friend. activities : went (/) house last seven days. met (/) school hang go somewhere last seven days. spent time (/) last weekend. talked (/) problem last seven days. talked (/) telephone last seven days. activities summed create valued network. Ties range value 1, meaning student nominated friend reported activities, 6, meaning student nominated friend reported participating five activities friend. Communities 1 48 omitted. Community 1 omitted due data follow original coding scheme. Community 48 omitted node attribute data available online time pulled .","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/addhealth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A portion of the AddHealth dataset pulled from an archived UCI site — addhealth","text":"Moody, James, \"Peer influence groups: identifying dense clusters large networks,\" Social Networks, 2001, 23: 261-283.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ase_specials.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for including node embeddings in formulas — ase_specials","title":"Helper functions for including node embeddings in formulas — ase_specials","text":"Quickly compute top rank singular vectors matrix return matrix. Especially useful formulas regression objects.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ase_specials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for including node embeddings in formulas — ase_specials","text":"","code":"U(A, rank, ...)  US(A, rank, ...)  V(A, rank, ...)  VS(A, rank, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ase_specials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for including node embeddings in formulas — ase_specials","text":"matrix() Matrix::Matrix() object. rank Rank desired decomposition. ... Arguments passed irlba::irlba nv number right singular vectors estimate. nu number left singular vectors estimate (defaults nv). maxit maximum number iterations. work working subspace dimension, larger values can speed convergence cost memory use. reorth TRUE, apply full reorthogonalization SVD bases, otherwise apply reorthogonalization right SVD basis vectors; latter case cheaper per iteration , overall, may require iterations convergence. Automatically TRUE fastpath=TRUE (see ). tol convergence determined \\(\\|^TU - VS\\| < tol\\|\\|\\), maximum relative change estimated singular values one iteration next less svtol = tol (see svtol ), spectral norm |||| approximated largest estimated singular value, U, V, S matrices corresponding estimated left right singular vectors, diagonal matrix estimated singular values, respectively. v optional starting vector output previous run irlba used restart algorithm left (see notes). right_only logical value indicating return right singular vectors (TRUE) sets vectors (FALSE). right_only option can cheaper compute use much less memory nrow() >> ncol() note obtained solutions typically lose accuracy due lack re-orthogonalization algorithm right_only = TRUE sets fastpath = FALSE (use option really large problems run memory nrow() >> ncol()). Consider increasing work option improve accuracy right_only=TRUE. verbose logical value TRUE prints status messages computation. scale optional column scaling vector whose values divide column ; must long number columns (see notes). center optional column centering vector whose values subtracted column ; must long number columns may used together deflation options (see notes). shift optional shift value (square matrices , see notes). mult DEPRECATED optional custom matrix multiplication function (default %*%, see notes). fastpath try fast C algorithm implementation possible; set fastpath=FALSE use reference R implementation. See notes details. svtol additional stopping tolerance maximum allowed absolute relative change across estimated singular value iterations. default value parameter set tol. can set svtol=Inf effectively disable stopping criterion. Setting svtol=Inf allows method terminate first Lanczos iteration finds invariant subspace, less certainty converged subspace desired one. (may, instance, miss largest singular values difficult problems.) smallest set smallest=TRUE estimate smallest singular values associated singular vectors. WARNING: option somewhat experimental, may produce poor estimates ill-conditioned matrices.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/ase_specials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper functions for including node embeddings in formulas — ase_specials","text":"cases, computes top-rank decomposition , \\(\\approx U S V^T\\). U returns \\(U\\) US returns \\(U S^{1/2}\\) V returns \\(V\\) VS returns \\(V S^{1/2}\\)","code":""},{"path":[]},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/glasgow.html","id":null,"dir":"Reference","previous_headings":"","what":"Teenage Friends and Lifestyle Data — glasgow","title":"Teenage Friends and Lifestyle Data — glasgow","text":"canonical \"Glasgow\" data, reported siena R package network data analysis. latentnetmediate simply re-exports data convenient format. See siena data document gory details.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/glasgow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teenage Friends and Lifestyle Data — glasgow","text":"","code":"glasgow"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/glasgow.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Teenage Friends and Lifestyle Data — glasgow","text":"list three tidygraph::tbl_graph() directed graphs objects, representing network measured three different points time. TODO: describe tidygraphs","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/glasgow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Teenage Friends and Lifestyle Data — glasgow","text":"Retrieved https://www.stats.ox.ac.uk/~snijders/siena/Glasgow_data.zip June 8, 2022.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/glasgow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Teenage Friends and Lifestyle Data — glasgow","text":"https://www.stats.ox.ac.uk/~snijders/siena/Glasgow_data.htm","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/leukemia.html","id":null,"dir":"Reference","previous_headings":"","what":"Leukemia cases by census tract in New York — leukemia","title":"Leukemia cases by census tract in New York — leukemia","text":"Leukemia cases census tract New York","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/leukemia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leukemia cases by census tract in New York — leukemia","text":"","code":"leukemia"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/leukemia.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Leukemia cases by census tract in New York — leukemia","text":"undirected tidygraph::tbl_graph() graph object, made node table edge table. node table columns: population (numeric): TODO cases (numeric): TODO censustract_fips (list character vectors): TODO edge table columns: (int): Id source census tract (int): Id neighboring census tract","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/leukemia.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Leukemia cases by census tract in New York — leukemia","text":"Extracted SpatialEpi package July 29, 2022. See SpatialEpi::NYleukemia details, well Wakefield Kim (2013).","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/leukemia.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Leukemia cases by census tract in New York — leukemia","text":"Wakefield, J., . Kim. \"Bayesian Model Cluster Detection.\" Biostatistics 14, . 4 (September 1, 2013): 752–65. https://doi.org/10.1093/biostatistics/kxt001.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/maltreatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Child maltreatment data — maltreatment","title":"Child maltreatment data — maltreatment","text":"Child maltreatment data","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/maltreatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Child maltreatment data — maltreatment","text":"","code":"maltreatment"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/maltreatment.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Child maltreatment data — maltreatment","text":"tidygraph::tbl_graph() object representing bipartite graph. TODO: describe tidygraphs","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/maltreatment.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Child maltreatment data — maltreatment","text":"Retrieved https://data.mendeley.com/datasets/95yysn7cns/1 October 18, 2022.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/maltreatment.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Child maltreatment data — maltreatment","text":"Freier, Anna, Johannes Kruse, Bjarne Schmalbach, Sandra Zara, Samuel Werner, Elmar Brähler, Jörg M. Fegert, Hanna Kampling. \"Supplementary Data Mediation Effect Personality Functioning – Gender Differences, Separate Analyses Depression Anxiety Symptoms Inferential Statistics Relationship Personality Functioning Different Types Child Maltreatment.\" Data Brief 42 (June 2022): 108272. https://doi.org/10.1016/j.dib.2022.108272. ———. \"Mediation Effect Personality Functioning Different Types Child Maltreatment Development Depression/Anxiety Symptoms – German Representative Study.\" Journal Affective Disorders 299 (February 2022): 408–15. https://doi.org/10.1016/j.jad.2021.12.020.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_block","title":"Title — model_block","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_block","text":"","code":"model_block(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_block","text":"n TODO k TODO ... Arguments passed model_mediator_block2 expected_degree TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_block","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_block","text":"","code":"set.seed(26)  mrdpg <- model_block(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_canonical.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_canonical","title":"Title — model_canonical","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_canonical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_canonical","text":"","code":"model_canonical(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_canonical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_canonical","text":"n TODO k TODO ... Arguments passed model_mediator_informative ztheta_0 TODO ztheta_t TODO ztheta_c TODO ztheta_tc TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_canonical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_canonical","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_canonical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_canonical","text":"","code":"set.seed(26)  mrdpg <- model_canonical(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_mediator_block","title":"Title — model_mediator_block","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_mediator_block","text":"","code":"model_mediator_block(n, k = 5, expected_degree = NULL)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_mediator_block","text":"n TODO k TODO expected_degree TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_mediator_block","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_mediator_block","text":"","code":"set.seed(26)  mblock <- model_mediator_block(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mblock) #> Error in eval(expr, envir, enclos): object 'mblock' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  fit <- nodelm(US(A, 5) ~ . - name - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found fit #> Error in eval(expr, envir, enclos): object 'fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block2.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_mediator_block2","title":"Title — model_mediator_block2","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_mediator_block2","text":"","code":"model_mediator_block2(n, k = 5, expected_degree = NULL)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_mediator_block2","text":"n TODO k TODO expected_degree TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_mediator_block2","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_block2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_mediator_block2","text":"","code":"set.seed(26)  mblock <- model_mediator_block2(n = 100, k = 15) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mblock) #> Error in eval(expr, envir, enclos): object 'mblock' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  fit <- nodelm(US(A, 5) ~ . - name - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found fit #> Error in eval(expr, envir, enclos): object 'fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_mediator_informative","title":"Title — model_mediator_informative","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_mediator_informative","text":"","code":"model_mediator_informative(   n,   k = 5,   ztheta_0 = NULL,   ztheta_t = NULL,   ztheta_c = NULL,   ztheta_tc = NULL,   expected_degree = NULL )"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_mediator_informative","text":"n TODO k TODO ztheta_0 TODO ztheta_t TODO ztheta_c TODO ztheta_tc TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_mediator_informative","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_informative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_mediator_informative","text":"","code":"inf <- model_mediator_informative(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(inf) #> Error in eval(expr, envir, enclos): object 'inf' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  nodelm(US(A, 5) ~ . - name - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  coef(inf) #> Error in eval(expr, envir, enclos): object 'inf' not found  # should be very close to zero inf$zX - inf$zC_true #> Error in eval(expr, envir, enclos): object 'inf' not found  inf$zX - inf$zC_obs #> Error in eval(expr, envir, enclos): object 'inf' not found inf$W - inf$zC_obs #> Error in eval(expr, envir, enclos): object 'inf' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_perfect.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_mediator_perfect","title":"Title — model_mediator_perfect","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_perfect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_mediator_perfect","text":"","code":"model_mediator_perfect(   n,   k = 5,   ztheta_0 = NULL,   ztheta_t = NULL,   ztheta_c = NULL,   ztheta_tc = NULL,   expected_degree = NULL )"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_perfect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_mediator_perfect","text":"n TODO k TODO ztheta_0 TODO ztheta_t TODO ztheta_c TODO ztheta_tc TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_perfect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_mediator_perfect","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_perfect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_mediator_perfect","text":"","code":"ztheta_tc <- rbind(   c(-1, 2, 0, 0, 0), # treated in block one become twice as central and jump to block two   c(0, 0, 0, 0, 0),   c(0, 1, -1, 0, 0), # treated in block three jump to block two   c(0, 0, 0, 0, 0),   c(0, 0, 0, 0, 0) )  perf <- model_mediator_perfect(n = 100, k = 5, ztheta_tc = ztheta_tc) #> Error in loadNamespace(x): there is no package called ‘fastRG’"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_uninformative.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_mediator_uninformative","title":"Title — model_mediator_uninformative","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_uninformative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_mediator_uninformative","text":"","code":"model_mediator_uninformative(n, k = 5, dim_w = 3)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_uninformative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_mediator_uninformative","text":"n TODO k TODO dim_w TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_uninformative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_mediator_uninformative","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_mediator_uninformative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_mediator_uninformative","text":"","code":"set.seed(26)  mu <- model_mediator_uninformative(n = 100, k = 5, dim_w = 3) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mu) #> Error in eval(expr, envir, enclos): object 'mu' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  coef(mu) #> Error in eval(expr, envir, enclos): object 'mu' not found  fit <- nodelm(US(A, 5) ~ . - name - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found fit #> Error in eval(expr, envir, enclos): object 'fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_null","title":"Title — model_null","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_null","text":"","code":"model_null(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_null","text":"n TODO k TODO ... Arguments passed model_mediator_block2 expected_degree TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_null","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_null","text":"","code":"set.seed(26)  mrdpg <- model_null(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null2.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_null2","title":"Title — model_null2","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_null2","text":"","code":"model_null2(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_null2","text":"n TODO k TODO ... Arguments passed model_mediator_block2 expected_degree TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_null2","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_null2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_null2","text":"","code":"set.seed(26)  mrdpg <- model_null2(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Mediator-pass through with normal errors — model_outcome_normal","title":"Mediator-pass through with normal errors — model_outcome_normal","text":"Mediator-pass normal errors","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mediator-pass through with normal errors — model_outcome_normal","text":"","code":"model_outcome_normal(mediator, beta_w = NULL, beta_x = NULL, sigma = 1)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mediator-pass through with normal errors — model_outcome_normal","text":"mediator TODO sigma TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mediator-pass through with normal errors — model_outcome_normal","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mediator-pass through with normal errors — model_outcome_normal","text":"","code":"m <- model_mediator_informative(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’ o <- model_outcome_normal(m) #> Error in eval(expr, envir, enclos): object 'm' not found  o #> Error in eval(expr, envir, enclos): object 'o' not found  coef(o) #> Error in eval(expr, envir, enclos): object 'o' not found  graph <- sample_tidygraph(o) #> Error in eval(expr, envir, enclos): object 'o' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Mediator-pass through with normal errors — model_outcome_t","title":"Mediator-pass through with normal errors — model_outcome_t","text":"Mediator-pass normal errors","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mediator-pass through with normal errors — model_outcome_t","text":"","code":"model_outcome_t(mediator, beta_w = NULL, beta_x = NULL, df = 5)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mediator-pass through with normal errors — model_outcome_t","text":"mediator TODO sigma TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mediator-pass through with normal errors — model_outcome_t","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_outcome_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mediator-pass through with normal errors — model_outcome_t","text":"","code":"m <- model_mediator_informative(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’ o <- model_outcome_normal(m) #> Error in eval(expr, envir, enclos): object 'm' not found  o #> Error in eval(expr, envir, enclos): object 'o' not found  coef(o) #> Error in eval(expr, envir, enclos): object 'o' not found  graph <- sample_tidygraph(o) #> Error in eval(expr, envir, enclos): object 'o' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_perfect.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_perfect","title":"Title — model_perfect","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_perfect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_perfect","text":"","code":"model_perfect(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_perfect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_perfect","text":"n TODO k TODO ... Arguments passed model_mediator_perfect ztheta_0 TODO ztheta_t TODO ztheta_c TODO ztheta_tc TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_perfect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_perfect","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_perfect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_perfect","text":"","code":"set.seed(26)  mrdpg <- model_perfect(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_shift","title":"Title — model_shift","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_shift","text":"","code":"model_shift(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_shift","text":"n TODO k TODO ... Arguments passed model_mediator_informative ztheta_0 TODO ztheta_t TODO ztheta_c TODO ztheta_tc TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_shift","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_shift","text":"","code":"set.seed(26)  mrdpg <- model_shift(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_uninformative.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — model_uninformative","title":"Title — model_uninformative","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_uninformative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — model_uninformative","text":"","code":"model_uninformative(n, k, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_uninformative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — model_uninformative","text":"n TODO k TODO ... Arguments passed model_mediator_uninformative dim_w TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_uninformative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — model_uninformative","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/model_uninformative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — model_uninformative","text":"","code":"set.seed(26)  mrdpg <- model_uninformative(n = 100, k = 5) #> Error in loadNamespace(x): there is no package called ‘fastRG’  graph <- sample_tidygraph(mrdpg) #> Error in eval(expr, envir, enclos): object 'mrdpg' not found graph #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit <- nodelm(US(A, 5) ~ . - name - y - 1, graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found o_fit <- nodelm(y ~ . - name - 1 + US(A, 5), graph = graph) #> Error in eval(expr, envir, enclos): object 'graph' not found  m_fit #> Error in eval(expr, envir, enclos): object 'm_fit' not found o_fit #> Error in eval(expr, envir, enclos): object 'o_fit' not found  mrdpg$nde #> Error in eval(expr, envir, enclos): object 'mrdpg' not found coef(o_fit) #> Error in eval(expr, envir, enclos): object 'o_fit' not found  coef(m_fit) #> Error in eval(expr, envir, enclos): object 'm_fit' not found coef(o_fit) #> Error in eval(expr, envir, enclos): object 'o_fit' not found"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/netmediate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate network direct and indirect effects via a spectral method — netmediate","title":"Estimate network direct and indirect effects via a spectral method — netmediate","text":"TODO: Allow embedding L_tau() L() addition ","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/netmediate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate network direct and indirect effects via a spectral method — netmediate","text":"","code":"netmediate(graph, formula, rank, coembedding = c(\"U\", \"V\", \"Z\", \"Y\"))"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/netmediate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate network direct and indirect effects via a spectral method — netmediate","text":"graph tidygraph::tbl_graph() object. formula Details nodal design matrix. form outcome ~ nodal_formula. now, interactions fancy stuff allowed formula. rank Integer describing desired rank embedding dimension.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/netmediate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate network direct and indirect effects via a spectral method — netmediate","text":"network_mediation object.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/netmediate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate network direct and indirect effects via a spectral method — netmediate","text":"","code":"library(tidygraph) #>  #> Attaching package: ‘tidygraph’ #> The following object is masked from ‘package:stats’: #>  #>     filter  data(smoking)  smokeint <- smoking |>   mutate(     smokes_int = as.integer(smokes) - 1   )  netmed <- smokeint |>   netmediate(smokes_int ~ sex, rank = 7)  netmed #> A network mediation object #> ------------------------ #>  #> Outcome model: #> -------------- #>  #> Call: #> stats::lm(formula = y ~ W + X + 0) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.85098 -0.19972 -0.01797  0.15513  0.87135  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> W(Intercept)  0.14519    0.12436   1.168 0.244798     #> Wsexmale      0.22585    0.09499   2.378 0.018663 *   #> X1            0.08570    0.23583   0.363 0.716813     #> X2            0.08491    0.08525   0.996 0.320815     #> X3           -0.01819    0.08608  -0.211 0.832902     #> X4           -0.06179    0.08229  -0.751 0.453845     #> X5            0.28977    0.08585   3.375 0.000935 *** #> X6            0.28659    0.10694   2.680 0.008170 **  #> X7            0.42534    0.20348   2.090 0.038236 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3622 on 153 degrees of freedom #> Multiple R-squared:  0.5332,\tAdjusted R-squared:  0.5057  #> F-statistic: 19.42 on 9 and 153 DF,  p-value: < 2.2e-16 #>  #> Mediator model: #> --------------- #>  #> Analysis of Variance Table #>  #>            Df Pillai approx F num Df den Df    Pr(>F)     #> W           2 1.5746   81.967     14    310 < 2.2e-16 *** #> Residuals 160                                             #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Estimated direct and indirect effects: #> --------------------------------------- #>  #> # A tibble: 2 × 5 #>   term    estimand estimate conf.low conf.high #>   <chr>   <chr>       <dbl>    <dbl>     <dbl> #> 1 sexmale nde         0.226   0.0382     0.414 #> 2 sexmale nie         0.246   0.0927     0.400"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm.html","id":null,"dir":"Reference","previous_headings":"","what":"Use spectral node embeddings in ordinary least squares regression — nodelm","title":"Use spectral node embeddings in ordinary least squares regression — nodelm","text":"helper function exposes adjacency matrix , normalized graph Laplacian L, regularized graph Laplacian L_tau model formulas convenient network regression. Primarily designed work tidygraph::tbl_graph() objects, can also used matrix representation graph together data.frame() nodal covariates.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use spectral node embeddings in ordinary least squares regression — nodelm","text":"","code":"nodelm(formula, graph = NULL, data = NULL, attr = NULL, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use spectral node embeddings in ordinary least squares regression — nodelm","text":"formula regression formula can include ase_specials vsp_specials, encode node embeddings. Data non- embedding terms can come global environment, data, can named attributes igraph object. likely convenient intuitive nodal covariates nodes table tidygraph::tbl_graph() object expose nodal data. See reddit, addhealth smoking examples. graph optional igraph::graph() tidygraph::tbl_graph() object. specified, graph adjacency matrix , normalized graph Laplacian L, regularized graph Laplacian L_tau injected environment formula, matrices may used freely formula. See igraph::as_adjacency_matrix() details construction , invertiforms::NormalizedLaplacian() invertiforms::RegularizedLaplacian() details construction L L_tau. Note can also use node embeddings based arbitrary matrix representations graph--see examples. data data.frame() one row node graph. attr Either NULL character string giving edge attribute name. NULL traditional adjacency matrix returned. NULL values given edge attribute included adjacency matrix. graph multiple edges, edge attribute arbitrarily chosen edge (multiple edges) included. argument ignored edges TRUE. Note works certain attribute types. sparse argumen TRUE, attribute must either logical numeric. sparse argument FALSE, character also allowed. reason difference Matrix package support character sparse matrices yet. ... Arguments passed stats::lm subset optional vector specifying subset observations     used fitting process.  (See additional details     argument interacts data-dependent bases     ‘Details’ section model.frame     documentation.) weights optional vector weights used fitting     process.  NULL numeric vector.     non-NULL, weighted least squares used weights     weights (, minimizing sum(w*e^2)); otherwise     ordinary least squares used.  See also ‘Details’, na.action function indicates happen     data contain NAs.  default set     na.action setting options,     na.fail unset.  ‘factory-fresh’     default na.omit.  Another possible value     NULL, action.  Value na.exclude can useful. method method used; fitting, currently     method = \"qr\" supported; method = \"model.frame\" returns     model frame (model = TRUE, see ). model,x,y,qr logicals.  TRUE corresponding     components fit (model frame, model matrix,     response, QR decomposition) returned. singular.ok logical. FALSE (default S     R) singular fit error. contrasts optional list. See contrasts.arg     model.matrix.default. offset can used specify priori known     component included linear predictor fitting.     NULL numeric vector matrix extents     matching response.  One offset terms can     included formula instead well, one     specified sum used.  See model.offset.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use spectral node embeddings in ordinary least squares regression — nodelm","text":"object class lm. See stats::lm() details.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use spectral node embeddings in ordinary least squares regression — nodelm","text":"","code":"data(addhealth, package = \"latentnetmediate\") data(smoking, package = \"latentnetmediate\")  ### some examples where data is specified as a tidygraph  # a regression that does not use any node embeddings nodelm(grade ~ sex, graph = addhealth[[36]]) #>  #> Call: #> stats::lm(formula = formula, data = data) #>  #> Coefficients: #> (Intercept)      sexmale   #>     9.79575     -0.04575   #>   # a regression including left and right singular embeddings of # the adjacency matrix and the normalized graph Laplacian nodelm(grade ~ sex + U(A, 5) + V(L, 3), graph = addhealth[[36]]) #>  #> Call: #> stats::lm(formula = formula, data = data) #>  #> Coefficients: #> (Intercept)      sexmale     U(A, 5)1     U(A, 5)2     U(A, 5)3     U(A, 5)4   #>     9.87934     -0.03804     -2.27030      0.33828    -14.13248      1.85827   #>    U(A, 5)5     V(L, 3)1     V(L, 3)2     V(L, 3)3   #>     5.56796      0.52628      0.85442     47.54782   #>   nodelm(as.integer(smokes) ~ sex + U(A, 5) , graph = smoking) #>  #> Call: #> stats::lm(formula = formula, data = data) #>  #> Coefficients: #> (Intercept)      sexmale     U(A, 5)1     U(A, 5)2     U(A, 5)3     U(A, 5)4   #>     0.96025      0.40651      1.57252      0.64105     -0.17947     -0.09439   #>    U(A, 5)5   #>     1.10853   #>   library(Matrix) library(tidygraph)  B <- igraph::as_adjacency_matrix(addhealth[[36]], attr = \"weight\")  node <- addhealth[[36]] |>   as_tibble() |>   mutate(level = rowSums(B))  node[5, \"sex\"] <- NA node #> # A tibble: 2,209 × 5 #>    sex    race     grade school level #>    <fct>  <fct>    <int> <fct>  <dbl> #>  1 male   hispanic    10 B          5 #>  2 male   hispanic    10 B          0 #>  3 female hispanic     9 B          0 #>  4 male   hispanic    10 B         19 #>  5 NA     hispanic     9 B         16 #>  6 female hispanic    11 B          0 #>  7 female hispanic     9 B          7 #>  8 male   white        9 B         19 #>  9 male   white       11 B          8 #> 10 female white       10 B          6 #> # ℹ 2,199 more rows  fit <- nodelm(level ~ sex + grade + race + U(sign(B), 10), data = node) summary(fit) #>  #> Call: #> stats::lm(formula = formula, data = data) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -29.221  -6.024  -1.228   4.687  34.829  #>  #> Coefficients: #>                    Estimate Std. Error t value Pr(>|t|)     #> (Intercept)         3.70846    1.62265   2.285 0.022385 *   #> sexmale            -2.87030    0.33382  -8.598  < 2e-16 *** #> grade               0.48221    0.14445   3.338 0.000858 *** #> raceblack           0.09635    0.94038   0.102 0.918404     #> racehispanic        1.66458    0.79837   2.085 0.037191 *   #> racemixed/other     2.48689    1.11826   2.224 0.026260 *   #> racewhite           1.43935    0.84573   1.702 0.088919 .   #> U(sign(B), 10)1   194.77884    8.38885  23.219  < 2e-16 *** #> U(sign(B), 10)2   119.71510    8.71828  13.732  < 2e-16 *** #> U(sign(B), 10)3   185.53943    8.51792  21.782  < 2e-16 *** #> U(sign(B), 10)4   -89.70215    7.91825 -11.329  < 2e-16 *** #> U(sign(B), 10)5   -76.51199    9.25422  -8.268 2.37e-16 *** #> U(sign(B), 10)6  -155.05165    8.64150 -17.943  < 2e-16 *** #> U(sign(B), 10)7    19.97444    8.13131   2.456 0.014110 *   #> U(sign(B), 10)8    89.03533    8.31167  10.712  < 2e-16 *** #> U(sign(B), 10)9    -8.72362    7.86190  -1.110 0.267294     #> U(sign(B), 10)10  -28.35095    8.06069  -3.517 0.000445 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 7.711 on 2132 degrees of freedom #>   (60 observations deleted due to missingness) #> Multiple R-squared:  0.4453,\tAdjusted R-squared:  0.4411  #> F-statistic: 106.9 on 16 and 2132 DF,  p-value: < 2.2e-16 #>"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Use spectral node embeddings in OLS with robust standard errors — nodelm_robust","title":"Use spectral node embeddings in OLS with robust standard errors — nodelm_robust","text":"helper function exposes adjacency matrix , normalized graph Laplacian L, regularized graph Laplacian L_tau model formulas convenient network regression. Primarily designed work tidygraph::tbl_graph() objects, can also used matrix representation graph together data.frame() nodal covariates.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use spectral node embeddings in OLS with robust standard errors — nodelm_robust","text":"","code":"nodelm_robust(formula, graph = NULL, data = NULL, attr = NULL, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use spectral node embeddings in OLS with robust standard errors — nodelm_robust","text":"formula regression formula can include ase_specials vsp_specials, encode node embeddings. Data non- embedding terms can come global environment, data, can named attributes igraph object. likely convenient intuitive nodal covariates nodes table tidygraph::tbl_graph() object expose nodal data. See reddit, addhealth smoking examples. graph optional igraph::graph() tidygraph::tbl_graph() object. specified, graph adjacency matrix , normalized graph Laplacian L, regularized graph Laplacian L_tau injected environment formula, matrices may used freely formula. See igraph::as_adjacency_matrix() details construction , invertiforms::NormalizedLaplacian() invertiforms::RegularizedLaplacian() details construction L L_tau. Note can also use node embeddings based arbitrary matrix representations graph--see examples. data data.frame() one row node graph. attr Either NULL character string giving edge attribute name. NULL traditional adjacency matrix returned. NULL values given edge attribute included adjacency matrix. graph multiple edges, edge attribute arbitrarily chosen edge (multiple edges) included. argument ignored edges TRUE. Note works certain attribute types. sparse argumen TRUE, attribute must either logical numeric. sparse argument FALSE, character also allowed. reason difference Matrix package support character sparse matrices yet. ... Arguments passed estimatr::lm_robust weights bare (unquoted) names weights variable supplied data. subset optional bare (unquoted) expression specifying subset observations used. clusters optional bare (unquoted) name variable corresponds clusters data. fixed_effects optional right-sided formula containing fixed effects projected data, ~ blockID. pass multiple-fixed effects intersecting groups. Speed gains greatest variables large numbers groups using \"HC1\" \"stata\" standard errors. See 'Details'. se_type sort standard error sought. clusters specified options \"HC0\", \"HC1\" (\"stata\", equivalent),  \"HC2\" (default), \"HC3\", \"classical\". clusters specified options \"CR0\", \"CR2\" (default), \"stata\". Can also specify \"none\", may speed estimation coefficients. ci logical. Whether compute return p-values confidence intervals, TRUE default. alpha significance level, 0.05 default. return_vcov logical. Whether return variance-covariance matrix later usage, TRUE default. try_cholesky logical. Whether try using Cholesky decomposition solve least squares instead QR decomposition, FALSE default. Using Cholesky decomposition may result speed gains, used users sure model full-rank (.e., perfect multi-collinearity)","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use spectral node embeddings in OLS with robust standard errors — nodelm_robust","text":"object class lm_robust. See estimatr::lm_robust() details.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/nodelm_robust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use spectral node embeddings in OLS with robust standard errors — nodelm_robust","text":"","code":"### some examples where data is specified as a tidygraph  # a regression that does not use any node embeddings nodelm_robust(grade ~ sex, graph = addhealth[[36]]) #>                Estimate Std. Error     t value  Pr(>|t|)  CI Lower   CI Upper #> (Intercept)  9.79574861 0.04440072 220.6213812 0.0000000  9.708676 9.88282122 #> sexmale     -0.04574861 0.06299104  -0.7262717 0.4677509 -0.169278 0.07778078 #>               DF #> (Intercept) 2160 #> sexmale     2160  # a regression including left and right singular embeddings of # the adjacency matrix and the normalized graph Laplacian nodelm_robust(grade ~ sex + U(A, 5) + V(L, 3), graph = addhealth[[36]]) #>                 Estimate Std. Error     t value      Pr(>|t|)    CI Lower #> (Intercept)   9.87934123 0.03360119 294.0176290  0.000000e+00   9.8134471 #> sexmale      -0.03804066 0.04422524  -0.8601570  3.897983e-01  -0.1247693 #> U(A, 5)1     -2.27029557 0.58329181  -3.8922123  1.023563e-04  -3.4141699 #> U(A, 5)2      0.33828108 1.24915054   0.2708089  7.865640e-01  -2.1113868 #> U(A, 5)3    -14.13248367 0.67382758 -20.9734419  5.097222e-89 -15.4539047 #> U(A, 5)4      1.85826748 0.46787645   3.9717055  7.370557e-05   0.9407304 #> U(A, 5)5      5.56795840 1.32618364   4.1984822  2.796484e-05   2.9672235 #> V(L, 3)1      0.52627629 1.64213265   0.3204834  7.486330e-01  -2.6940558 #> V(L, 3)2      0.85441741 1.53932913   0.5550583  5.789125e-01  -2.1643101 #> V(L, 3)3     47.54782188 1.54149212  30.8453227 2.555583e-173  44.5248526 #>                 CI Upper   DF #> (Intercept)   9.94523541 2152 #> sexmale       0.04868801 2152 #> U(A, 5)1     -1.12642127 2152 #> U(A, 5)2      2.78794893 2152 #> U(A, 5)3    -12.81106267 2152 #> U(A, 5)4      2.77580454 2152 #> U(A, 5)5      8.16869331 2152 #> V(L, 3)1      3.74660835 2152 #> V(L, 3)2      3.87314490 2152 #> V(L, 3)3     50.57079113 2152  nodelm_robust(as.integer(smokes) ~ sex + U(A, 5) , graph = smoking) #>                Estimate Std. Error    t value     Pr(>|t|)   CI Lower  CI Upper #> (Intercept)  0.96024972 0.09895098  9.7042975 1.083297e-17  0.7647832 1.1557162 #> sexmale      0.40650863 0.07779719  5.2252357 5.533918e-07  0.2528291 0.5601882 #> U(A, 5)1     1.57251864 1.50442927  1.0452593 2.975305e-01 -1.3993116 4.5443489 #> U(A, 5)2     0.64105255 0.52974082  1.2101249 2.280732e-01 -0.4053907 1.6874958 #> U(A, 5)3    -0.17947427 0.40233025 -0.4460869 6.561570e-01 -0.9742323 0.6152837 #> U(A, 5)4    -0.09438519 0.33939577 -0.2780977 7.813080e-01 -0.7648232 0.5760529 #> U(A, 5)5     1.10853421 0.33943585  3.2658135 1.343659e-03  0.4380170 1.7790514 #>              DF #> (Intercept) 155 #> sexmale     155 #> U(A, 5)1    155 #> U(A, 5)2    155 #> U(A, 5)3    155 #> U(A, 5)4    155 #> U(A, 5)5    155  library(Matrix) library(tidygraph)  data(addhealth, package = \"latentnetmediate\")  B <- igraph::as_adjacency_matrix(addhealth[[36]], attr = \"weight\")  node <- addhealth[[36]] |>   as_tibble() |>   mutate(level = rowSums(B))  node[5, \"sex\"] <- NA node #> # A tibble: 2,209 × 5 #>    sex    race     grade school level #>    <fct>  <fct>    <int> <fct>  <dbl> #>  1 male   hispanic    10 B          5 #>  2 male   hispanic    10 B          0 #>  3 female hispanic     9 B          0 #>  4 male   hispanic    10 B         19 #>  5 NA     hispanic     9 B         16 #>  6 female hispanic    11 B          0 #>  7 female hispanic     9 B          7 #>  8 male   white        9 B         19 #>  9 male   white       11 B          8 #> 10 female white       10 B          6 #> # ℹ 2,199 more rows  fit <- nodelm_robust(level ~ sex + grade + race + U(sign(B), 10), data = node) summary(fit) #>  #> Call: #> estimatr::lm_robust(formula = formula, data = data) #>  #> Standard error type:  HC2  #>  #> Coefficients: #>                    Estimate Std. Error  t value  Pr(>|t|)  CI Lower  CI Upper #> (Intercept)         3.70846     1.5597   2.3776 1.751e-02    0.6497    6.7672 #> sexmale            -2.87030     0.3345  -8.5816 1.771e-17   -3.5262   -2.2144 #> grade               0.48221     0.1375   3.5081 4.607e-04    0.2126    0.7518 #> raceblack           0.09635     0.8779   0.1098 9.126e-01   -1.6252    1.8179 #> racehispanic        1.66458     0.7881   2.1121 3.480e-02    0.1190    3.2102 #> racemixed/other     2.48689     1.0766   2.3099 2.099e-02    0.3756    4.5982 #> racewhite           1.43935     0.8365   1.7207 8.545e-02   -0.2011    3.0797 #> U(sign(B), 10)1   194.77884     9.1004  21.4032 3.198e-92  176.9322  212.6255 #> U(sign(B), 10)2   119.71510     9.2763  12.9055 9.586e-37  101.5236  137.9066 #> U(sign(B), 10)3   185.53943     8.8289  21.0150 2.911e-89  168.2253  202.8536 #> U(sign(B), 10)4   -89.70215     8.2256 -10.9052 5.536e-27 -105.8333  -73.5710 #> U(sign(B), 10)5   -76.51199     7.7617  -9.8577 1.902e-22  -91.7332  -61.2908 #> U(sign(B), 10)6  -155.05165    10.6856 -14.5104 1.437e-45 -176.0069 -134.0964 #> U(sign(B), 10)7    19.97444     6.5063   3.0700 2.168e-03    7.2151   32.7338 #> U(sign(B), 10)8    89.03533    11.4875   7.7506 1.405e-14   66.5074  111.5633 #> U(sign(B), 10)9    -8.72362     9.0506  -0.9639 3.352e-01  -26.4725    9.0252 #> U(sign(B), 10)10  -28.35095     8.0183  -3.5358 4.153e-04  -44.0755  -12.6264 #>                    DF #> (Intercept)      2132 #> sexmale          2132 #> grade            2132 #> raceblack        2132 #> racehispanic     2132 #> racemixed/other  2132 #> racewhite        2132 #> U(sign(B), 10)1  2132 #> U(sign(B), 10)2  2132 #> U(sign(B), 10)3  2132 #> U(sign(B), 10)4  2132 #> U(sign(B), 10)5  2132 #> U(sign(B), 10)6  2132 #> U(sign(B), 10)7  2132 #> U(sign(B), 10)8  2132 #> U(sign(B), 10)9  2132 #> U(sign(B), 10)10 2132 #>  #> Multiple R-squared:  0.4453 ,\tAdjusted R-squared:  0.4411  #> F-statistic: 91.57 on 16 and 2132 DF,  p-value: < 2.2e-16"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/plot_expected_a_pre_trt.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_expected_a_pre_trt","title":"Title — plot_expected_a_pre_trt","text":"Title","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/plot_expected_a_pre_trt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_expected_a_pre_trt","text":"","code":"plot_expected_a_pre_trt(model)  plot_expected_a_post_trt(model)  plot_expected_a_pre_post_diff(model)  plot_z_pre_post_diff(model)  plot_sparse_adjacency_matrix(A)  plot_tidygraph_matrix(graph)  plot_tidygraph_matrix_rownormalized(graph)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/plot_expected_a_pre_trt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_expected_a_pre_trt","text":"model TODO TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/plot_expected_a_pre_trt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — plot_expected_a_pre_trt","text":"TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/reddit.html","id":null,"dir":"Reference","previous_headings":"","what":"Top level gender-flaired Reddit comments — reddit","title":"Top level gender-flaired Reddit comments — reddit","text":"Reddit online forum divided topic-specific subforums called 'subreddits. consider three subreddits: keto, okcupid, childfree. subreddits, identify users whose username flair includes gender label (usually 'M' 'F'). collect top-level comments users 2018. use comment's text score, number likes minus dislikes users. dataset includes 90k comments selected subreddits.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/reddit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Top level gender-flaired Reddit comments — reddit","text":"","code":"reddit"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/reddit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Top level gender-flaired Reddit comments — reddit","text":"tidygraph::tbl_graph() bipartite graph object, made node table edge table. node table columns: type (logical): logical indicator whether node corresponds word reddit post. Used internally igraph -- see node_type easier use alternative. name (character): Unique node identifier. one node graph reddit post, word used reddit post. Posts identified number. Words identified tokenized words. Tokenized raw top-level comment text performed tidytext::unnest_tokens(..., token = \"tweets\"). node_type (character): Either \"post\" \"word\". author_gender: Either \"female\" \"male\", based user flairs. available post nodes. score (integer): number upvotes minus number downvotes received given post. available post nodes. subreddit (character): One \"keto\", \"okcupid\" \"childfree\". available post nodes. author_pseudonym (character): author identifier consistent across posts. available post nodes. edge table columns: (int): Id post (int): Id word weight (double): Number times word used post.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/reddit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Top level gender-flaired Reddit comments — reddit","text":"Downloaded https://archive.org/details/reddit_posts_2018 June 6, 2022.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/reddit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Top level gender-flaired Reddit comments — reddit","text":"See https://github.com/blei-lab/causal-text-embeddings replication package Veitch et al (2020). See https://github.com/blei-lab/causal-text-embeddings/blob/master/src/reddit/data_cleaning/BigQuery_get_data particular additional data details.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/reddit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Top level gender-flaired Reddit comments — reddit","text":"Veitch, Victor, Dhanya Sridhar, David M Blei. \"Adapting Text Embeddings Causal Inference.\" Proceedings 36 Th Conference Uncertainty Artificial Intelligence (UAI), 124:10, 2020.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sample_tidygraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from a mediated RDPG object — sample_tidygraph","title":"Sample from a mediated RDPG object — sample_tidygraph","text":"Sample mediated RDPG object","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sample_tidygraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from a mediated RDPG object — sample_tidygraph","text":"","code":"sample_tidygraph(model, ...)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sample_tidygraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from a mediated RDPG object — sample_tidygraph","text":"model mediated_rdpg object ... Ignored.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sample_tidygraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from a mediated RDPG object — sample_tidygraph","text":"tidygraph::tbl_graph() object.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve","text":"Estimate mediated effects variety embedding dimensions","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve","text":"","code":"sensitivity_curve(   graph,   formula,   max_rank,   ...,   ranks_to_consider = 10,   coembedding = c(\"U\", \"V\") )"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve","text":"graph tidygraph::tbl_graph() object. formula Details nodal design matrix. form outcome ~ nodal_formula. now, interactions fancy stuff allowed formula. max_rank Maximum rank consider (integer). ranks_to_consider many distinct ranks consider (integer). Optional, defaults 10.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve","text":"rank_sensitivity_curve object, subclass tibble::tibble().","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve","text":"","code":"library(tidygraph) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  data(smoking, package = \"latentnetmediate\")  # example with fully observed node data  rank_curve <- smoking |>   mutate(     smokes_int = as.integer(smokes) - 1   ) |>  sensitivity_curve(    smokes_int ~ sex,    max_rank = 25,    ranks_to_consider = 24,    se_type = \"stata\"  )  rank_curve #>       term estimand   estimate     conf.low  conf.high rank #> 1  sexmale      nde 0.44882982  0.307436797 0.59022284    2 #> 2  sexmale      nie 0.02339241 -0.033318287 0.08010310    2 #> 3  sexmale      nde 0.44448122  0.295139721 0.59382272    3 #> 4  sexmale      nie 0.02774100 -0.044349111 0.09983112    3 #> 5  sexmale      nde 0.44571454  0.295726398 0.59570269    4 #> 6  sexmale      nie 0.02650768 -0.046355999 0.09937136    4 #> 7  sexmale      nde 0.40650863  0.253379910 0.55963735    5 #> 8  sexmale      nie 0.06571359 -0.015830571 0.14725776    5 #> 9  sexmale      nde 0.36117004  0.195990809 0.52634926    6 #> 10 sexmale      nie 0.11105219  0.011209237 0.21089513    6 #> 11 sexmale      nde 0.22585339  0.005527157 0.44617962    7 #> 12 sexmale      nie 0.24636883  0.067635152 0.42510252    7 #> 13 sexmale      nde 0.23699648  0.013861371 0.46013158    8 #> 14 sexmale      nie 0.23522575  0.051043342 0.41940815    8 #> 15 sexmale      nde 0.27141798  0.058999619 0.48383634    9 #> 16 sexmale      nie 0.20080424  0.023657932 0.37795055    9 #> 17 sexmale      nde 0.26311547  0.051155900 0.47507505   10 #> 18 sexmale      nie 0.20910675  0.031144110 0.38706938   10 #> 19 sexmale      nde 0.25876521  0.044826489 0.47270392   11 #> 20 sexmale      nie 0.21345702  0.034441267 0.39247276   11 #> 21 sexmale      nde 0.26000608  0.044919411 0.47509275   12 #> 22 sexmale      nie 0.21221614  0.032016562 0.39241572   12 #> 23 sexmale      nde 0.26164411  0.045996772 0.47729144   13 #> 24 sexmale      nie 0.21057811  0.025018131 0.39613810   13 #> 25 sexmale      nde 0.25582219  0.037275057 0.47436933   14 #> 26 sexmale      nie 0.21640003  0.028819811 0.40398025   14 #> 27 sexmale      nde 0.24351687  0.025250536 0.46178319   15 #> 28 sexmale      nie 0.22870536  0.040538609 0.41687211   15 #> 29 sexmale      nde 0.23883036  0.017668231 0.45999250   16 #> 30 sexmale      nie 0.23339186  0.044119369 0.42266435   16 #> 31 sexmale      nde 0.24152998  0.019951248 0.46310872   17 #> 32 sexmale      nie 0.23069224  0.042882020 0.41850246   17 #> 33 sexmale      nde 0.25093142  0.030190117 0.47167273   18 #> 34 sexmale      nie 0.22129080  0.031325915 0.41125569   18 #> 35 sexmale      nde 0.24629162  0.020270348 0.47231288   19 #> 36 sexmale      nie 0.22593061  0.032950505 0.41891071   19 #> 37 sexmale      nde 0.24222276  0.013313629 0.47113190   20 #> 38 sexmale      nie 0.22999946  0.036070732 0.42392818   20 #> 39 sexmale      nde 0.25158329  0.023153797 0.48001277   21 #> 40 sexmale      nie 0.22063894  0.028262414 0.41301546   21 #> 41 sexmale      nde 0.25138914  0.019299235 0.48347905   22 #> 42 sexmale      nie 0.22083308  0.024880934 0.41678523   22 #> 43 sexmale      nde 0.25150147  0.018567396 0.48443555   23 #> 44 sexmale      nie 0.22072075  0.023878310 0.41756319   23 #> 45 sexmale      nde 0.24876867  0.011284657 0.48625268   24 #> 46 sexmale      nie 0.22345355  0.018893361 0.42801375   24 #> 47 sexmale      nde 0.24513935  0.015088082 0.47519062   25 #> 48 sexmale      nie 0.22708287  0.029912916 0.42425283   25 plot(rank_curve)   # example with some missing node data. in this case, all edges are # used to estimate embeddings, but once the embeddings are in hand, # the regression only considers complete cases  data(glasgow, package = \"latentnetmediate\")  glasgow1 <- glasgow[[1]] |>   activate(nodes) |>   filter(selection129) |>   mutate(     smokes_dimaria = as.numeric(tobacco_int > 1)   ) |>   activate(edges) |>   filter(friendship != \"Structurally missing\") |>   activate(nodes)  # verify that there is some missing data, in this case treatment indicators glasgow1 |>   as_tibble() |>   count(is.na(money)) #> # A tibble: 2 × 2 #>   `is.na(money)`     n #>   <lgl>          <int> #> 1 FALSE            126 #> 2 TRUE               3  glasgow1 |>   sensitivity_curve(smokes_dimaria ~ money, max_rank = 15, coembedding = \"V\") |>   plot()"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mediated effects for a variety of embedding dimensions using custom embedding — sensitivity_curve_custom","title":"Estimate mediated effects for a variety of embedding dimensions using custom embedding — sensitivity_curve_custom","text":"Estimate mediated effects variety embedding dimensions using custom embedding","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mediated effects for a variety of embedding dimensions using custom embedding — sensitivity_curve_custom","text":"","code":"sensitivity_curve_custom(graph, formula, X_max, ..., node_data = NULL)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mediated effects for a variety of embedding dimensions using custom embedding — sensitivity_curve_custom","text":"graph tidygraph::tbl_graph() object. formula Details nodal design matrix. form outcome ~ nodal_formula. now, interactions fancy stuff allowed formula. X_max TODO","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mediated effects for a variety of embedding dimensions using custom embedding — sensitivity_curve_custom","text":"rank_sensitivity_curve object, subclass tibble::tibble().","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mediated effects for a variety of embedding dimensions using custom embedding — sensitivity_curve_custom","text":"","code":"library(tidygraph) library(invertiforms) #>  #> Attaching package: ‘invertiforms’ #> The following object is masked from ‘package:base’: #>  #>     transform  # suppose you want to use the degree-normalized Laplacian embedding # instead of the adjacency spectral embedding. you can do that as # follows  data(smoking)  smoking2 <- smoking |>   mutate(     smokes_int = as.integer(smokes) - 1   )  A <- igraph::as_adj(smoking2)  # here we construct our \"custom\" embeddings  iform <- NormalizedLaplacian(A) L <- transform(iform, A)  s_max <- RSpectra::svds(L, 10, 10) X_max <- s_max$u %*% diag(sqrt(s_max$d))  # and now we plug them into the product-of-coefs estimator  curve_custom <- sensitivity_curve_custom(smoking2, smokes_int ~ sex, X_max) curve_custom #>       term estimand    estimate     conf.low  conf.high rank #> 1  sexmale      nde 0.462584057  0.324773572 0.60039454    2 #> 2  sexmale      nie 0.009638165 -0.037277910 0.05655424    2 #> 3  sexmale      nde 0.465040674  0.326993960 0.60308739    3 #> 4  sexmale      nie 0.007181549 -0.041107405 0.05547050    3 #> 5  sexmale      nde 0.461088465  0.321659503 0.60051743    4 #> 6  sexmale      nie 0.011133757 -0.040143343 0.06241086    4 #> 7  sexmale      nde 0.454402926  0.315351671 0.59345418    5 #> 8  sexmale      nie 0.017819297 -0.036770708 0.07240930    5 #> 9  sexmale      nde 0.408927272  0.261109268 0.55674528    6 #> 10 sexmale      nie 0.063294950 -0.006394047 0.13298395    6 #> 11 sexmale      nde 0.204860430 -0.003057296 0.41277816    7 #> 12 sexmale      nie 0.267361792  0.107097088 0.42762650    7 #> 13 sexmale      nde 0.204875869 -0.004008205 0.41375994    8 #> 14 sexmale      nie 0.267346353  0.106628566 0.42806414    8 #> 15 sexmale      nde 0.204222956 -0.006692245 0.41513816    9 #> 16 sexmale      nie 0.267999266  0.104521094 0.43147744    9 #> 17 sexmale      nde 0.198839427 -0.008447035 0.40612589   10 #> 18 sexmale      nie 0.273382795  0.110201014 0.43656458   10  plot(curve_custom)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve_long","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve_long","text":"Estimate mediated effects variety embedding dimensions","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve_long","text":"","code":"sensitivity_curve_long(   graph,   formula,   max_rank,   ...,   ranks_to_consider = 10,   coembedding = c(\"U\", \"V\"),   node_data = NULL )"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve_long","text":"graph tidygraph::tbl_graph() object. formula Details nodal design matrix. form outcome ~ nodal_formula. now, interactions fancy stuff allowed formula. max_rank Maximum rank consider (integer). ranks_to_consider many distinct ranks consider (integer). Optional, defaults 10.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve_long","text":"rank_sensitivity_curve object, subclass tibble::tibble().","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/sensitivity_curve_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mediated effects for a variety of embedding dimensions — sensitivity_curve_long","text":"","code":"library(tidygraph) library(dplyr)  data(smoking, package = \"latentnetmediate\")  # example with fully observed node data  rank_curve <- smoking |>   mutate(     smokes_int = as.integer(smokes) - 1   ) |>  sensitivity_curve(    smokes_int ~ sex,    max_rank = 25,    ranks_to_consider = 24,    se_type = \"stata\"  )  rank_curve #>       term estimand   estimate     conf.low  conf.high rank #> 1  sexmale      nde 0.44882982  0.307436797 0.59022284    2 #> 2  sexmale      nie 0.02339241 -0.033318287 0.08010310    2 #> 3  sexmale      nde 0.44448122  0.295139721 0.59382272    3 #> 4  sexmale      nie 0.02774100 -0.044349111 0.09983112    3 #> 5  sexmale      nde 0.44571454  0.295726398 0.59570269    4 #> 6  sexmale      nie 0.02650768 -0.046355999 0.09937136    4 #> 7  sexmale      nde 0.40650863  0.253379910 0.55963735    5 #> 8  sexmale      nie 0.06571359 -0.015830571 0.14725776    5 #> 9  sexmale      nde 0.36117004  0.195990809 0.52634926    6 #> 10 sexmale      nie 0.11105219  0.011209237 0.21089513    6 #> 11 sexmale      nde 0.22585339  0.005527157 0.44617962    7 #> 12 sexmale      nie 0.24636883  0.067635152 0.42510252    7 #> 13 sexmale      nde 0.23699648  0.013861371 0.46013158    8 #> 14 sexmale      nie 0.23522575  0.051043342 0.41940815    8 #> 15 sexmale      nde 0.27141798  0.058999619 0.48383634    9 #> 16 sexmale      nie 0.20080424  0.023657932 0.37795055    9 #> 17 sexmale      nde 0.26311547  0.051155900 0.47507505   10 #> 18 sexmale      nie 0.20910675  0.031144110 0.38706938   10 #> 19 sexmale      nde 0.25876521  0.044826489 0.47270392   11 #> 20 sexmale      nie 0.21345702  0.034441267 0.39247276   11 #> 21 sexmale      nde 0.26000608  0.044919411 0.47509275   12 #> 22 sexmale      nie 0.21221614  0.032016562 0.39241572   12 #> 23 sexmale      nde 0.26164411  0.045996772 0.47729144   13 #> 24 sexmale      nie 0.21057811  0.025018131 0.39613810   13 #> 25 sexmale      nde 0.25582219  0.037275057 0.47436933   14 #> 26 sexmale      nie 0.21640003  0.028819811 0.40398025   14 #> 27 sexmale      nde 0.24351687  0.025250536 0.46178319   15 #> 28 sexmale      nie 0.22870536  0.040538609 0.41687211   15 #> 29 sexmale      nde 0.23883036  0.017668231 0.45999250   16 #> 30 sexmale      nie 0.23339186  0.044119369 0.42266435   16 #> 31 sexmale      nde 0.24152998  0.019951248 0.46310872   17 #> 32 sexmale      nie 0.23069224  0.042882020 0.41850246   17 #> 33 sexmale      nde 0.25093142  0.030190117 0.47167273   18 #> 34 sexmale      nie 0.22129080  0.031325915 0.41125569   18 #> 35 sexmale      nde 0.24629162  0.020270348 0.47231288   19 #> 36 sexmale      nie 0.22593061  0.032950505 0.41891071   19 #> 37 sexmale      nde 0.24222276  0.013313629 0.47113190   20 #> 38 sexmale      nie 0.22999946  0.036070732 0.42392818   20 #> 39 sexmale      nde 0.25158329  0.023153797 0.48001277   21 #> 40 sexmale      nie 0.22063894  0.028262414 0.41301546   21 #> 41 sexmale      nde 0.25138914  0.019299235 0.48347905   22 #> 42 sexmale      nie 0.22083308  0.024880934 0.41678523   22 #> 43 sexmale      nde 0.25150147  0.018567396 0.48443555   23 #> 44 sexmale      nie 0.22072075  0.023878310 0.41756319   23 #> 45 sexmale      nde 0.24876867  0.011284657 0.48625268   24 #> 46 sexmale      nie 0.22345355  0.018893361 0.42801375   24 #> 47 sexmale      nde 0.24513935  0.015088082 0.47519062   25 #> 48 sexmale      nie 0.22708287  0.029912916 0.42425283   25 plot(rank_curve)   # example with some missing node data. in this case, all edges are # used to estimate embeddings, but once the embeddings are in hand, # the regression only considers complete cases  data(glasgow, package = \"latentnetmediate\")  glasgow1 <- glasgow[[1]] |>   activate(nodes) |>   filter(selection129) |>   mutate(     smokes_dimaria = as.numeric(tobacco_int > 1)   ) |>   activate(edges) |>   filter(friendship != \"Structurally missing\") |>   activate(nodes)  # verify that there is some missing data, in this case treatment indicators glasgow1 |>   as_tibble() |>   count(is.na(money)) #> # A tibble: 2 × 2 #>   `is.na(money)`     n #>   <lgl>          <int> #> 1 FALSE            126 #> 2 TRUE               3  glasgow1 |>   sensitivity_curve(smokes_dimaria ~ money, max_rank = 15, coembedding = \"V\") |>   plot()"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/smoking.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoking in a network of chinese college students — smoking","title":"Smoking in a network of chinese college students — smoking","text":"Data collected Lab Big Data Methodology University Notre Dame 2017. participants 162 students 4-year college China. 90 female 72 male students. average age 21.64 years (SD = 0.86). data collection, student indicated whether students /friends . symmetrized friendship network using strongest relation (.e., one two students indicated friend, assumed mutual friends).","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/smoking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoking in a network of chinese college students — smoking","text":"","code":"smoking"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/smoking.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Smoking in a network of chinese college students — smoking","text":"tidygraph::tbl_graph() graph object, made node table edge table. node table columns: sex (factor): Sex student, coded male female. smokes (factor): Whether student smokes. Levels smokes doesnt smoke. edge table columns: (int): Id student declaring friend (int): Id student declared friend","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/smoking.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Smoking in a network of chinese college students — smoking","text":"Obtained Haiyan Liu email April 28, 2022.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/smoking.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Smoking in a network of chinese college students — smoking","text":"Liu, Haiyan, Ick Hoon Jin, Zhiyong Zhang, Ying Yuan. \"Social Network Mediation Analysis: Latent Space Approach.\" Psychometrika 86, . 1 (March 2021): 272–98. https://doi.org/10.1007/s11336-020-09736-z.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/vsp_specials.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for including rotated node embeddings in formulas — vsp_specials","title":"Helper functions for including rotated node embeddings in formulas — vsp_specials","text":"cases, computes top-rank decomposition , \\(\\approx U S V^T = Z B Y^T\\), \\(Z\\) \\(U\\) varimax rotation \\(Y\\) \\(V\\) varimax rotation. See vsp::vsp() details.","code":""},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/vsp_specials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for including rotated node embeddings in formulas — vsp_specials","text":"","code":"Z(A, rank, ..., degree_normalize = FALSE)  Y(A, rank, ..., degree_normalize = FALSE)"},{"path":"https://alexpghayes.github.io/latentnetmediate/reference/vsp_specials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for including rotated node embeddings in formulas — vsp_specials","text":"matrix() Matrix::Matrix() object. rank Rank desired decomposition. ... Arguments passed vsp::vsp x Either graph adjacency matrix, igraph::igraph tidygraph::tbl_graph. x matrix Matrix::Matrix x[, j] correspond edge going node node j. degree_normalize regularized graph laplacian used instead raw adjacency matrix? Defaults TRUE. center = TRUE, first centered normalized.","code":""},{"path":[]}]
